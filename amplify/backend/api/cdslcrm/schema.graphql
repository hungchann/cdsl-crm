# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: private, provider: userPools }
} # FOR TESTING ONLY!
type Contact @model 
  @auth(rules: [
    { allow: owner }
  ]) {
  id: ID!
  name: String!
  email: String!
  phone: String
  position: String
  company: String
  customerID: ID!
  customer: Customer @connection(fields: ["customerID"])
  interactions: [Interaction] @connection(keyName: "byContact", fields: ["id"])
}

type Interaction @model 
  @auth(rules: [
    { allow: owner }
  ]) {
  id: ID!
  type: String!
  subject: String!
  date: AWSDateTime!
  notes: String
  contactID: ID!
  contact: Contact @connection(fields: ["contactID"])
  customerID: ID!
  customer: Customer @connection(fields: ["customerID"])
}

type Opportunity @model 
  @auth(rules: [
    { allow: owner }
  ]) {
  id: ID!
  title: String!
  description: String
  status: String!
  value: Float
  closeDate: AWSDateTime
  customerID: ID!
  customer: Customer @connection(fields: ["customerID"])
}

# Assuming you have a User type for owner-based authentication
type User @model {
  id: ID!
  username: String!
  email: String!
  contacts: [Contact] @connection(keyName: "byUser", fields: ["id"])
  interactions: [Interaction] @connection(keyName: "byUser", fields: ["id"])
  opportunities: [Opportunity] @connection(keyName: "byUser", fields: ["id"])
}

# Additional directives for connections (if needed)
# This assumes you have defined keyNames in your schema for the connections